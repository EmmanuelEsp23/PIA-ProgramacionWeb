// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PIA_PWEB.Models.dbModels;

#nullable disable

namespace PIA_PWEB.Migrations
{
    [DbContext(typeof(PiaDbContext))]
    [Migration("20241114234911_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ListaPelicula", b =>
                {
                    b.Property<int>("IdLista")
                        .HasColumnType("int");

                    b.Property<int>("IdPelicula")
                        .HasColumnType("int");

                    b.HasKey("IdLista", "IdPelicula");

                    b.ToTable("ListaPelicula");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PIA_PWEB.Models.dbModels.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<string>("FotoPerfil")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("PIA_PWEB.Models.dbModels.Calificacione", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<int>("IdPelicula")
                        .HasColumnType("int")
                        .HasColumnName("idPelicula");

                    b.Property<DateOnly?>("FechaCalificacion")
                        .HasColumnType("date");

                    b.Property<decimal?>("Puntuacion")
                        .HasColumnType("decimal(3, 1)");

                    b.HasKey("IdUsuario", "IdPelicula")
                        .HasName("PK__Califica__DDA295DEE7E04FED");

                    b.HasIndex("IdPelicula");

                    b.ToTable("Calificaciones");
                });

            modelBuilder.Entity("PIA_PWEB.Models.dbModels.Categorium", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdCategoria")
                        .HasName("PK__Categori__8A3D240C1C9D8F85");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("PIA_PWEB.Models.dbModels.Like", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<int>("IdPelicula")
                        .HasColumnType("int")
                        .HasColumnName("idPelicula");

                    b.Property<DateOnly?>("FechaLike")
                        .HasColumnType("date");

                    b.HasKey("IdUsuario", "IdPelicula")
                        .HasName("PK__Likes__DDA295DEB65CAEBF");

                    b.HasIndex("IdPelicula");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("PIA_PWEB.Models.dbModels.Lista", b =>
                {
                    b.Property<int>("IdLista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idLista");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLista"));

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.HasKey("IdLista")
                        .HasName("PK__listas__6C8A0FE58F6A0F3F");

                    b.HasIndex("IdUsuario");

                    b.ToTable("listas");
                });

            modelBuilder.Entity("PIA_PWEB.Models.dbModels.Pelicula", b =>
                {
                    b.Property<int>("IdPelicula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPelicula");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPelicula"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly>("FechaLanzamiento")
                        .HasColumnType("date");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    b.Property<int>("IdStreaming")
                        .HasColumnType("int")
                        .HasColumnName("idStreaming");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<string>("NombrePelicula")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Portada")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("IdPelicula")
                        .HasName("PK__Pelicula__9F5B678A4FAA0764");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdStreaming");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Pelicula");
                });

            modelBuilder.Entity("PIA_PWEB.Models.dbModels.Reseña", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<int>("IdPelicula")
                        .HasColumnType("int")
                        .HasColumnName("idPelicula");

                    b.Property<string>("Contenido")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("FechaPublicacion")
                        .HasColumnType("date");

                    b.HasKey("IdUsuario", "IdPelicula")
                        .HasName("PK__Reseñas__DDA295DE13E729DA");

                    b.HasIndex("IdPelicula");

                    b.ToTable("Reseñas");
                });

            modelBuilder.Entity("PIA_PWEB.Models.dbModels.Streaming", b =>
                {
                    b.Property<int>("IdStreaming")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idStreaming");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStreaming"));

                    b.Property<string>("NombreStreaming")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("IdStreaming")
                        .HasName("PK__Streamin__0E4E246D4490C82F");

                    b.ToTable("Streaming");
                });

            modelBuilder.Entity("PeliculaListum", b =>
                {
                    b.Property<int>("IdLista")
                        .HasColumnType("int")
                        .HasColumnName("idLista");

                    b.Property<int>("IdPelicula")
                        .HasColumnType("int")
                        .HasColumnName("idPelicula");

                    b.HasKey("IdLista", "IdPelicula")
                        .HasName("PK__Pelicula__D57FB99D0E1763E5");

                    b.HasIndex("IdPelicula");

                    b.ToTable("PeliculaLista", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("PIA_PWEB.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("PIA_PWEB.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIA_PWEB.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("PIA_PWEB.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PIA_PWEB.Models.dbModels.Calificacione", b =>
                {
                    b.HasOne("PIA_PWEB.Models.dbModels.Pelicula", "IdPeliculaNavigation")
                        .WithMany("Calificaciones")
                        .HasForeignKey("IdPelicula")
                        .IsRequired()
                        .HasConstraintName("FK__Calificac__idPel__66603565");

                    b.HasOne("PIA_PWEB.Models.dbModels.ApplicationUser", "IdUsuarioNavigation")
                        .WithMany("Calificaciones")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK__Calificac__idUsu__656C112C");

                    b.Navigation("IdPeliculaNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("PIA_PWEB.Models.dbModels.Like", b =>
                {
                    b.HasOne("PIA_PWEB.Models.dbModels.Pelicula", "IdPeliculaNavigation")
                        .WithMany("Likes")
                        .HasForeignKey("IdPelicula")
                        .IsRequired()
                        .HasConstraintName("FK__Likes__idPelicul__6B24EA82");

                    b.HasOne("PIA_PWEB.Models.dbModels.ApplicationUser", "IdUsuarioNavigation")
                        .WithMany("Likes")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK__Likes__idUsuario__6A30C649");

                    b.Navigation("IdPeliculaNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("PIA_PWEB.Models.dbModels.Lista", b =>
                {
                    b.HasOne("PIA_PWEB.Models.dbModels.ApplicationUser", "IdUsuarioNavigation")
                        .WithMany("Lista")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK__listas__idUsuari__5AEE82B9");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("PIA_PWEB.Models.dbModels.Pelicula", b =>
                {
                    b.HasOne("PIA_PWEB.Models.dbModels.Categorium", "IdCategoriaNavigation")
                        .WithMany("Peliculas")
                        .HasForeignKey("IdCategoria")
                        .IsRequired()
                        .HasConstraintName("FK_Pelicula_Categoria");

                    b.HasOne("PIA_PWEB.Models.dbModels.Streaming", "IdStreamingNavigation")
                        .WithMany("Peliculas")
                        .HasForeignKey("IdStreaming")
                        .IsRequired()
                        .HasConstraintName("FK_Pelicula_Streaming");

                    b.HasOne("PIA_PWEB.Models.dbModels.ApplicationUser", "IdUsuarioNavigation")
                        .WithMany("Peliculas")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_Pelicula_Usuario");

                    b.Navigation("IdCategoriaNavigation");

                    b.Navigation("IdStreamingNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("PIA_PWEB.Models.dbModels.Reseña", b =>
                {
                    b.HasOne("PIA_PWEB.Models.dbModels.Pelicula", "IdPeliculaNavigation")
                        .WithMany("Reseñas")
                        .HasForeignKey("IdPelicula")
                        .IsRequired()
                        .HasConstraintName("FK__Reseñas__idPelic__628FA481");

                    b.HasOne("PIA_PWEB.Models.dbModels.ApplicationUser", "IdUsuarioNavigation")
                        .WithMany("Reseñas")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK__Reseñas__idUsuar__619B8048");

                    b.Navigation("IdPeliculaNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("PeliculaListum", b =>
                {
                    b.HasOne("PIA_PWEB.Models.dbModels.Lista", null)
                        .WithMany()
                        .HasForeignKey("IdLista")
                        .IsRequired()
                        .HasConstraintName("FK__PeliculaL__idLis__5DCAEF64");

                    b.HasOne("PIA_PWEB.Models.dbModels.Pelicula", null)
                        .WithMany()
                        .HasForeignKey("IdPelicula")
                        .IsRequired()
                        .HasConstraintName("FK__PeliculaL__idPel__5EBF139D");
                });

            modelBuilder.Entity("PIA_PWEB.Models.dbModels.ApplicationUser", b =>
                {
                    b.Navigation("Calificaciones");

                    b.Navigation("Likes");

                    b.Navigation("Lista");

                    b.Navigation("Peliculas");

                    b.Navigation("Reseñas");
                });

            modelBuilder.Entity("PIA_PWEB.Models.dbModels.Categorium", b =>
                {
                    b.Navigation("Peliculas");
                });

            modelBuilder.Entity("PIA_PWEB.Models.dbModels.Pelicula", b =>
                {
                    b.Navigation("Calificaciones");

                    b.Navigation("Likes");

                    b.Navigation("Reseñas");
                });

            modelBuilder.Entity("PIA_PWEB.Models.dbModels.Streaming", b =>
                {
                    b.Navigation("Peliculas");
                });
#pragma warning restore 612, 618
        }
    }
}
